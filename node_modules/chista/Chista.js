'use strict';

exports.__esModule = true;

var _serviceUtils = require('./serviceUtils');

var _serviceUtils2 = _interopRequireDefault(_serviceUtils);

var _consoleLogger = require('./consoleLogger');

var _consoleLogger2 = _interopRequireDefault(_consoleLogger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint max-params:0 */

class Chista {
    constructor({
        defaultParamsBuilder = () => ({}),
        defaultContextBuilder = req => cloneDeep(req.session && req.session.context ? req.session.context : {}),
        defaultLogger = _consoleLogger2.default
    }) {
        this.defaultParamsBuilder = defaultParamsBuilder;
        this.defaultContextBuilder = defaultContextBuilder;
        this.defaultLogger = defaultLogger;
    }

    runService(serviceClass, { context = {}, params = {}, logger = this.defaultLogger }) {
        return _serviceUtils2.default.runService(serviceClass, { context, params, logger });
    }

    makeServiceRunner(serviceClass, paramsBuilder = this.defaultParamsBuilder, contextBuilder = this.defaultContextBuilder, logger = this.defaultLogger) {
        return _serviceUtils2.default.makeServiceRunner(serviceClass, paramsBuilder, contextBuilder, logger);
    }

    renderPromiseAsJson(req, res, promise, logger = this.defaultLogger) {
        return _serviceUtils2.default.renderPromiseAsJson(req, res, promise, logger);
    }
}

exports.default = Chista; /* istanbul ignore next */

function cloneDeep(data) {
    return JSON.parse(JSON.stringify(data));
}